{
  "/Users/vwa0lw6/Documents/dev/ebi/aws-sample/backend": {
    "versionSfCore": null,
    "versionFramework": "4.2.4",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "/Users/vwa0lw6/Documents/dev/ebi/aws-sample/backend",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "my-typescript-app-backend",
      "frameworkVersion": "4.2.4",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "eu-central-1",
        "memorySize": 2048,
        "stage": "dev",
        "timeout": 10,
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "HelloLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/my-typescript-app-backend-dev-hello"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "my-typescript-app-backend",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-typescript-app-backend-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-typescript-app-backend-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "my-typescript-app-backend",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "HelloLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/my-typescript-app-backend/dev/1725379555779-2024-09-03T16:05:55.779Z/my-typescript-app-backend.zip"
                },
                "Handler": "src/functions/index.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "my-typescript-app-backend-dev-hello",
                "MemorySize": 2048,
                "Timeout": 10,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "HelloLogGroup"
              ]
            },
            "HelloLambdaVersionC5TUqbfLnBsf2ol1nCvlM46S3YYydA1Rrhc9xuVr7Q": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "HelloLambdaFunction"
                },
                "CodeSha256": "XYvxDxkrdME+yO7g+ROnN7M7ePL2Q0OO1jcvGdwcVV0="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-my-typescript-app-backend",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceHello": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "hello",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodHelloOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceHello"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodHelloGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceHello"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "HelloLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "HelloLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1725379553827": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodHelloOptions",
                "ApiGatewayMethodHelloGet"
              ]
            },
            "HelloLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "HelloLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-my-typescript-app-backend-dev-ServerlessDeploymentBucketName"
              }
            },
            "HelloLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "HelloLambdaVersionC5TUqbfLnBsf2ol1nCvlM46S3YYydA1Rrhc9xuVr7Q"
              },
              "Export": {
                "Name": "sls-my-typescript-app-backend-dev-HelloLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-my-typescript-app-backend-dev-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "hello": {
          "handler": "src/functions/index.handler",
          "events": [
            {
              "http": {
                "path": "hello",
                "method": "get",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "my-typescript-app-backend-dev-hello",
          "package": {},
          "memory": 2048,
          "timeout": 10,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "HelloLambdaVersionC5TUqbfLnBsf2ol1nCvlM46S3YYydA1Rrhc9xuVr7Q"
        }
      }
    },
    "serviceRawFile": "service: my-typescript-app-backend\n\nframeworkVersion: \"4.2.4\" # Ensure you're using Serverless Framework v3 or above\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: eu-central-1 # Set your desired AWS region\n  memorySize: 2048 # Lambda function memory allocation\n  stage: dev\n\n  timeout: 10 # Maximum allowed duration of a function execution in seconds\n\nfunctions:\n  hello:\n    handler: src/functions/index.handler\n    events:\n      - http:\n          path: hello\n          method: get\n          cors: true\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "An error occurred: ServerlessDeploymentBucket - Resource handler returned message: \"User: arn:aws:sts::261148084556:assumed-role/vws-developer-role/vwa0lw6+development is not authorized to perform: s3:CreateBucket on resource: \"arn:aws:s3:::my-typescript-app-backend-serverlessdeploymentbuck-yp5fghzub6zp\" with an explicit deny in a service control policy (Service: S3, Status Code: 403, Request ID: 95ASV7GYMVQFY9M4, Extended Request ID: Bn3bMRj6WjJXP397bZd3dT8p6rutT/npCYAs1IiUav9wiqhl0KKcUOOSCtFQjZDoAcWJspkLRlwRyIECrmxdvFK6kToLKr8kwuQXaJTBp88=)\" (RequestToken: 649a96f4-293a-6afd-706b-eed345c516ae, HandlerErrorCode: GeneralServiceException).",
      "stack": "ServerlessError2: An error occurred: ServerlessDeploymentBucket - Resource handler returned message: \"User: arn:aws:sts::261148084556:assumed-role/vws-developer-role/vwa0lw6+development is not authorized to perform: s3:CreateBucket on resource: \"arn:aws:s3:::my-typescript-app-backend-serverlessdeploymentbuck-yp5fghzub6zp\" with an explicit deny in a service control policy (Service: S3, Status Code: 403, Request ID: 95ASV7GYMVQFY9M4, Extended Request ID: Bn3bMRj6WjJXP397bZd3dT8p6rutT/npCYAs1IiUav9wiqhl0KKcUOOSCtFQjZDoAcWJspkLRlwRyIECrmxdvFK6kToLKr8kwuQXaJTBp88=)\" (RequestToken: 649a96f4-293a-6afd-706b-eed345c516ae, HandlerErrorCode: GeneralServiceException).\n    at file:///Users/vwa0lw6/.serverless/releases/4.2.4/package/dist/sf-core.js:686:832\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async AwsDeploy.create (file:///Users/vwa0lw6/.serverless/releases/4.2.4/package/dist/sf-core.js:686:10217)\n    at async PluginManager.runHooks (file:///Users/vwa0lw6/.serverless/releases/4.2.4/package/dist/sf-core.js:884:9309)\n    at async PluginManager.invoke (file:///Users/vwa0lw6/.serverless/releases/4.2.4/package/dist/sf-core.js:884:10080)\n    at async PluginManager.spawn (file:///Users/vwa0lw6/.serverless/releases/4.2.4/package/dist/sf-core.js:884:10441)\n    at async PluginManager.runHooks (file:///Users/vwa0lw6/.serverless/releases/4.2.4/package/dist/sf-core.js:884:9309)\n    at async PluginManager.invoke (file:///Users/vwa0lw6/.serverless/releases/4.2.4/package/dist/sf-core.js:884:10080)\n    at async PluginManager.run (file:///Users/vwa0lw6/.serverless/releases/4.2.4/package/dist/sf-core.js:884:10811)\n    at async Serverless.run (file:///Users/vwa0lw6/.serverless/releases/4.2.4/package/dist/sf-core.js:891:10464)",
      "code": "AWS_CLOUD_FORMATION_CREATE_STACK_INTERNAL_INSUFFICIENT_PERMISSIONS"
    },
    "params": {},
    "machineId": "79ca759efa3886d128ceb01c170e4338",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "57609e39-1a50-4f06-a809-e0ea6479cd8e",
    "orgName": "ebeahim",
    "userId": "8Gfj2PZSG02ZzRSGcC",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "ebeahim",
    "subscription": null,
    "userEmail": "eeeee.bbbbb.iiiii@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "261148084556",
    "projectType": "framework",
    "versionSf": "4.2.4",
    "serviceProviderAwsCfStackName": "my-typescript-app-backend-dev",
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}